#!/usr/bin/python3

import sys
import os
import shutil
from glob import glob
from urllib import request

httpser_home = os.path.join(os.environ['HOME'],".httpser")
http_template_file = os.path.join(httpser_home, "http.conf")
https_template_file = os.path.join(httpser_home, "https.conf")
servers = os.path.join(httpser_home,"servers")

def init():
    if not os.path.exists(httpser_home):
        os.mkdir(httpser_home)

    if not os.path.exists(servers):
        os.mkdir(servers)

    if not os.path.exists(template_file):
        with request.urlopen("https://raw.githubusercontent.com/Andful/httpser/master/res/template.conf") as r:
            with open(template_file, "w") as config:
                config.write(r.read().decode("utf-8"))
    if not os.path.exists(template_file):
        with request.urlopen("https://raw.githubusercontent.com/Andful/httpser/master/res/template.conf") as r:
            with open(template_file, "w") as config:
                config.write(r.read().decode("utf-8"))
def add():
    if len(sys.argv) < 3:
        print("USAGE: %s %s [DOMAIN]" % (sys.argv[0], sys.argv[1]))
        return

    domain = sys.argv[2]
    domain_dir = os.path.join(servers, domain)
    if os.path.exists(domain_dir):
        print("domain already existing")
        return

    os.mkdir(domain_dir)

    with open(template_file) as template:
        template_string = template.read()

    template_string = template_string.replace("{{.Domain}}",domain)
    template_string = template_string.replace("{{.ServersDir}}","/servers")

    with open(os.path.join(domain_dir,domain+".conf"), "w") as domain_conf:
        domain_conf.write(template_string)

    include_dir = os.path.join(domain_dir,"include")

    os.mkdir(include_dir)

    for e in sys.argv[3:]:
        shutil.copy(e,include_dir)

def remove():
    if len(sys.argv) < 3:
        print("USAGE: %s %s [DOMAIN]" % (sys.argv[0], sys.argv[1]))
        return

    domain = sys.argv[2]
    domain_dir = os.path.join(servers, domain)

    shutil.rmtree(domain_dir)
    pass

def list():
    domains = glob(os.path.join(servers,"*"))
    for e in domains:
        print(os.path.basename(e))

def clear():
    pass
def help():
    print("Help TODO")

if __name__=='__main__':
    init()
    if len(sys.argv) > 1:
        if sys.argv[1] == "add":
            add()
        elif sys.argv[1] == "remove" or sys.argv[1] == "rm":
            remove()
        elif sys.argv[1] == "list":
            list()
        elif sys.argv[1] == "clear":
            clear()
        elif sys.argv[1] == "help":
            help()
        else:
            help()
    else:
        help()
